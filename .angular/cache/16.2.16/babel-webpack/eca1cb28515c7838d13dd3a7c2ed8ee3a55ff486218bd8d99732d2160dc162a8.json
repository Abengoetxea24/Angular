{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./Components/navbar/navbar.component\";\nfunction AppComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-navbar\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(router) {\n    this.router = router;\n    this.title = 'Reto-3';\n    /* Variable para controlar la visibilidad del login en el navbar */\n    this.mostrarNavbar = true;\n    this.router.events.subscribe(() => {\n      this.updateMostrarNavbar();\n    });\n  }\n  // Actualiza la visibilidad del navbar según la ruta\n  updateMostrarNavbar() {\n    const currentRoute = this.router.url;\n    this.mostrarNavbar = currentRoute !== '/Login'; //Ocultar navbar en la página de login\n  }\n\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[4, \"ngIf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AppComponent_div_0_Template, 2, 0, \"div\", 0);\n          i0.ɵɵelement(1, \"router-outlet\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.mostrarNavbar);\n        }\n      },\n      dependencies: [i2.NgIf, i1.RouterOutlet, i3.NavbarComponent],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","AppComponent","constructor","router","title","mostrarNavbar","events","subscribe","updateMostrarNavbar","currentRoute","url","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_div_0_Template","ɵɵproperty"],"sources":["D:\\AA JANIRE\\Documentos\\Clase\\DAW\\2º\\Angular\\src\\app\\app.component.ts","D:\\AA JANIRE\\Documentos\\Clase\\DAW\\2º\\Angular\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Reto-3';\r\n\r\n  /* Variable para controlar la visibilidad del login en el navbar */\r\n  mostrarNavbar:boolean = true;\r\n\r\n  constructor(private router: Router) {\r\n    \r\n    this.router.events.subscribe(() => {\r\n      this.updateMostrarNavbar();\r\n    });\r\n  }\r\n\r\n  // Actualiza la visibilidad del navbar según la ruta\r\n  private updateMostrarNavbar(): void {\r\n    const currentRoute = this.router.url;\r\n    this.mostrarNavbar = currentRoute !== '/Login'; //Ocultar navbar en la página de login\r\n  }\r\n}\r\n","<!-- Mostrar u ocultar el componente dependiendo de la variable:  -->\r\n<div *ngIf=\"mostrarNavbar\">\r\n  <app-navbar></app-navbar>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n"],"mappings":";;;;;;ICCAA,EAAA,CAAAC,cAAA,UAA2B;IACzBD,EAAA,CAAAE,SAAA,iBAAyB;IAC3BF,EAAA,CAAAG,YAAA,EAAM;;;ADKN,OAAM,MAAOC,YAAY;EAMvBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAL1B,KAAAC,KAAK,GAAG,QAAQ;IAEhB;IACA,KAAAC,aAAa,GAAW,IAAI;IAI1B,IAAI,CAACF,MAAM,CAACG,MAAM,CAACC,SAAS,CAAC,MAAK;MAChC,IAAI,CAACC,mBAAmB,EAAE;IAC5B,CAAC,CAAC;EACJ;EAEA;EACQA,mBAAmBA,CAAA;IACzB,MAAMC,YAAY,GAAG,IAAI,CAACN,MAAM,CAACO,GAAG;IACpC,IAAI,CAACL,aAAa,GAAGI,YAAY,KAAK,QAAQ,CAAC,CAAC;EAClD;;;;uBAjBWR,YAAY,EAAAJ,EAAA,CAAAc,iBAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAZZ,YAAY;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCPzBvB,EAAA,CAAAyB,UAAA,IAAAC,2BAAA,iBAEM;UAEN1B,EAAA,CAAAE,SAAA,oBAA+B;;;UAJzBF,EAAA,CAAA2B,UAAA,SAAAH,GAAA,CAAAhB,aAAA,CAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}