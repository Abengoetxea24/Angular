{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.contrasena = '';\n    this.usuario = '';\n  }\n  login() {\n    if (this.usuario == 'admin' && this.contrasena == 'admin') {\n      this.router.navigate(['/Admin']);\n    } else {\n      this.router.navigate(['/Home']);\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","router","contrasena","usuario","login","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\2AW3-8\\Documents\\Angular\\src\\app\\Components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  constructor(private router: Router) {}\r\n\r\n  contrasena: string = '';\r\n  usuario: string = '';\r\n\r\n  login(){\r\n\r\n    \r\n    if(this.usuario == 'admin' && this.contrasena == 'admin'){\r\n      this.router.navigate(['/Admin']);\r\n    }else{\r\n      this.router.navigate(['/Home']);\r\n\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EACzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAE1B,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,OAAO,GAAW,EAAE;EAHiB;EAKrCC,KAAKA,CAAA;IAGH,IAAG,IAAI,CAACD,OAAO,IAAI,OAAO,IAAI,IAAI,CAACD,UAAU,IAAI,OAAO,EAAC;MACvD,IAAI,CAACD,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;KACjC,MAAI;MACH,IAAI,CAACJ,MAAM,CAACI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;EAGnC;CAED;AAjBYN,cAAc,GAAAO,UAAA,EAL1BR,SAAS,CAAC;EACTS,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWV,cAAc,CAiB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}