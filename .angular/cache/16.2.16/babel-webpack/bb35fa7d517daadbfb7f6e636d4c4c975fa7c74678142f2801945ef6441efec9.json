{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let AppComponent = class AppComponent {\n  //Controlar la visibilidad (.suscribe) llamando al método\n  constructor(router) {\n    this.router = router;\n    this.title = 'Reto-3';\n    /* Variable para controlar la visibilidad del login en el navbar */\n    this.mostrarNavbar = true;\n    this.router.events.subscribe(() => {\n      this.updateMostrarNavbar();\n    });\n  }\n  // Actualiza la visibilidad del navbar según la ruta\n  updateMostrarNavbar() {\n    const currentRoute = this.router.url; //Si la ruta no es /login se muestra el navbar\n    this.mostrarNavbar = currentRoute !== '/Login'; //Ocultar navbar en login\n  }\n};\n\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);","map":{"version":3,"names":["Component","AppComponent","constructor","router","title","mostrarNavbar","events","subscribe","updateMostrarNavbar","currentRoute","url","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\AA JANIRE\\Documentos\\Clase\\DAW\\2º\\Angular\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n<<<<<<< HEAD\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n=======\r\nimport { Router } from '@angular/router';\r\n>>>>>>> janire\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Reto-3';\r\n\r\n  /* Variable para controlar la visibilidad del login en el navbar */\r\n  mostrarNavbar:boolean = true;\r\n\r\n  //Controlar la visibilidad (.suscribe) llamando al método\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe(() => {\r\n      this.updateMostrarNavbar();\r\n    });\r\n  }\r\n\r\n  // Actualiza la visibilidad del navbar según la ruta\r\n  private updateMostrarNavbar(): void {\r\n    const currentRoute = this.router.url; //Si la ruta no es /login se muestra el navbar\r\n    this.mostrarNavbar = currentRoute !== '/Login'; //Ocultar navbar en login\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAalC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAMvB;EACAC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAN1B,KAAAC,KAAK,GAAG,QAAQ;IAEhB;IACA,KAAAC,aAAa,GAAW,IAAI;IAI1B,IAAI,CAACF,MAAM,CAACG,MAAM,CAACC,SAAS,CAAC,MAAK;MAChC,IAAI,CAACC,mBAAmB,EAAE;IAC5B,CAAC,CAAC;EACJ;EAEA;EACQA,mBAAmBA,CAAA;IACzB,MAAMC,YAAY,GAAG,IAAI,CAACN,MAAM,CAACO,GAAG,CAAC,CAAC;IACtC,IAAI,CAACL,aAAa,GAAGI,YAAY,KAAK,QAAQ,CAAC,CAAC;EAClD;CACD;;AAlBYR,YAAY,GAAAU,UAAA,EALxBX,SAAS,CAAC;EACTY,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWb,YAAY,CAkBxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}