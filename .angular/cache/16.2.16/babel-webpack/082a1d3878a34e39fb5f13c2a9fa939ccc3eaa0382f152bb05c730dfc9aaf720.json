{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let FormRescatadosComponent = class FormRescatadosComponent {\n  constructor(servicesService,\n  // Servicio inyectado\n  route,\n  // Para acceder a los parámetros de la URL\n  router // Para navegar entre rutas\n  ) {\n    this.servicesService = servicesService;\n    this.route = route;\n    this.router = router;\n    // Propiedades del formulario\n    this.nombre = '';\n    this.apellido = '';\n    this.edad = '';\n    this.sexo = '';\n    this.procedencia = '';\n    this.valoracion_medica = '';\n    this.medico_id = '';\n    this.rescate_id = '';\n    this.index = null; // Índice del rescatado a editar (nulo si es un nuevo rescatado)\n    this.rescatados = []; // Lista de rescatados que se mostrará en la tabla\n  }\n\n  ngOnInit() {\n    // Obtenemos el índice del rescatado de los parámetros de la URL\n    this.route.queryParams.subscribe(params => {\n      if (params['index'] !== undefined) {\n        this.index = +params['index']; // Convertimos el índice a número\n        const rescatado = this.servicesService.getRescatados()[this.index];\n        // Rellenamos los campos del formulario con los datos del rescatado\n        this.nombre = rescatado.nombre;\n        this.apellido = rescatado.apellido;\n        this.edad = rescatado.edad;\n        this.sexo = rescatado.sexo;\n        this.procedencia = rescatado.procedencia;\n        this.valoracion_medica = rescatado.valoracion_medica;\n        this.medico_id = rescatado.medico_id;\n        this.rescate_id = rescatado.rescate_id;\n      }\n    });\n    // Nos suscribimos al observable `rescatados$` para obtener los datos en tiempo real\n    this.servicesService.rescatados$.subscribe(data => {\n      this.rescatados = data; // Actualizamos la lista local cada vez que cambien los datos en el servicio\n    });\n  }\n  // Método para guardar (añadir o actualizar) el rescatado\n  guardarRescatado() {\n    const rescatado = {\n      nombre: this.nombre,\n      apellido: this.apellido,\n      edad: this.edad,\n      sexo: this.sexo,\n      procedencia: this.procedencia,\n      valoracion_medica: this.valoracion_medica,\n      medico_id: this.medico_id,\n      rescate_id: this.rescate_id\n    };\n    if (this.index === null) {\n      // Si no hay índice, agregamos un nuevo rescatado\n      this.servicesService.agregarRescatado(rescatado);\n    } else {\n      // Si hay índice, actualizamos el rescatado existente\n      this.servicesService.actualizarRescatado(this.index, rescatado);\n    }\n    // Navegamos de vuelta a la página de la tabla\n    this.router.navigate(['/admin']);\n  }\n};\nFormRescatadosComponent = __decorate([Component({\n  selector: 'app-form-rescatados',\n  templateUrl: './form-rescatados.component.html',\n  styleUrls: ['./form-rescatados.component.scss']\n})], FormRescatadosComponent);","map":{"version":3,"names":["Component","FormRescatadosComponent","constructor","servicesService","route","router","nombre","apellido","edad","sexo","procedencia","valoracion_medica","medico_id","rescate_id","index","rescatados","ngOnInit","queryParams","subscribe","params","undefined","rescatado","getRescatados","rescatados$","data","guardarRescatado","agregarRescatado","actualizarRescatado","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/aimarbengoetxeaolano/Documents/GS2-/Reto/Angular/src/app/Components/admin/form-rescatados/form-rescatados.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServicesService } from 'src/app/Services/services.service'; // Importamos el servicio para manejar los datos\n\n@Component({\n  selector: 'app-form-rescatados',\n  templateUrl: './form-rescatados.component.html',\n  styleUrls: ['./form-rescatados.component.scss'],\n})\nexport class FormRescatadosComponent implements OnInit {\n  // Propiedades del formulario\n  nombre = '';\n  apellido = '';\n  edad = '';\n  sexo = '';\n  procedencia = '';\n  valoracion_medica = '';\n  medico_id = '';\n  rescate_id = '';\n  index: number | null = null; // Índice del rescatado a editar (nulo si es un nuevo rescatado)\n  rescatados: any[] = []; // Lista de rescatados que se mostrará en la tabla\n\n\n  constructor(\n    private servicesService: ServicesService, // Servicio inyectado\n    private route: ActivatedRoute, // Para acceder a los parámetros de la URL\n    private router: Router // Para navegar entre rutas\n  ) {}\n\n  ngOnInit() {\n    // Obtenemos el índice del rescatado de los parámetros de la URL\n    this.route.queryParams.subscribe((params) => {\n      if (params['index'] !== undefined) {\n        this.index = +params['index']; // Convertimos el índice a número\n        const rescatado = this.servicesService.getRescatados()[this.index];\n        // Rellenamos los campos del formulario con los datos del rescatado\n        this.nombre = rescatado.nombre;\n        this.apellido = rescatado.apellido;\n        this.edad = rescatado.edad;\n        this.sexo = rescatado.sexo;\n        this.procedencia = rescatado.procedencia;\n        this.valoracion_medica = rescatado.valoracion_medica;\n        this.medico_id = rescatado.medico_id;\n        this.rescate_id = rescatado.rescate_id;\n      }\n    });\n      // Nos suscribimos al observable `rescatados$` para obtener los datos en tiempo real\n      this.servicesService.rescatados$.subscribe((data) => {\n        this.rescatados = data; // Actualizamos la lista local cada vez que cambien los datos en el servicio\n      });\n  }\n  \n\n\n  // Método para guardar (añadir o actualizar) el rescatado\n  guardarRescatado() {\n    const rescatado = {\n      nombre: this.nombre,\n      apellido: this.apellido,\n      edad: this.edad,\n      sexo: this.sexo,\n      procedencia: this.procedencia,\n      valoracion_medica: this.valoracion_medica,\n      medico_id: this.medico_id,\n      rescate_id: this.rescate_id,\n    };\n\n    if (this.index === null) {\n      // Si no hay índice, agregamos un nuevo rescatado\n      this.servicesService.agregarRescatado(rescatado);\n    } else {\n      // Si hay índice, actualizamos el rescatado existente\n      this.servicesService.actualizarRescatado(this.index, rescatado);\n    }\n\n    // Navegamos de vuelta a la página de la tabla\n    this.router.navigate(['/admin']);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}