{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ServicesService {\n  constructor() {\n    // Creamos un BehaviorSubject para almacenar y observar la lista de rescatados\n    this.rescatadosSource = new BehaviorSubject([]);\n    // Exponemos el BehaviorSubject como un Observable para que los componentes puedan suscribirse\n    this.rescatados$ = this.rescatadosSource.asObservable();\n    // Inicializamos el BehaviorSubject con algunos datos de ejemplo\n    this.rescatadosSource.next([{\n      nombre: \"Juan\",\n      apellido: \"Perez\",\n      edad: \"30\",\n      sexo: \"M\",\n      procedencia: \"Madrid\",\n      valoracion_medica: \"Buena\",\n      medico_id: \"1\",\n      rescate_id: \"101\"\n    }, {\n      nombre: \"Maria\",\n      apellido: \"Gomez\",\n      edad: \"25\",\n      sexo: \"F\",\n      procedencia: \"Barcelona\",\n      valoracion_medica: \"Regular\",\n      medico_id: \"2\",\n      rescate_id: \"102\"\n    }]);\n  }\n  // Devuelve la lista actual de rescatados\n  getRescatados() {\n    return this.rescatadosSource.getValue();\n  }\n  // Agrega un nuevo rescatado a la lista y emite la nueva lista a los suscriptores\n  agregarRescatado(rescatado) {\n    const rescatados = this.getRescatados();\n    this.rescatadosSource.next([...rescatados, rescatado]);\n  }\n  // Actualiza un rescatado existente según su índice\n  actualizarRescatado(index, rescatado) {\n    const rescatados = this.getRescatados();\n    rescatados[index] = rescatado; // Sobreescribimos el elemento en la posición indicada\n    this.rescatadosSource.next([...rescatados]); // Emitimos la lista actualizada\n  }\n  // Elimina un rescatado según su índice y emite la lista actualizada\n  eliminarRescatado(index) {\n    const rescatados = this.getRescatados();\n    rescatados.splice(index, 1); // Eliminamos el elemento de la lista\n    this.rescatadosSource.next([...rescatados]); // Emitimos la nueva lista\n  }\n\n  static {\n    this.ɵfac = function ServicesService_Factory(t) {\n      return new (t || ServicesService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ServicesService,\n      factory: ServicesService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","ServicesService","constructor","rescatadosSource","rescatados$","asObservable","next","nombre","apellido","edad","sexo","procedencia","valoracion_medica","medico_id","rescate_id","getRescatados","getValue","agregarRescatado","rescatado","rescatados","actualizarRescatado","index","eliminarRescatado","splice","factory","ɵfac","providedIn"],"sources":["/home/zornotza/Documents/laravel-proiektuak/Angular/src/app/Services/services.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n// Definimos la interfaz para estructurar los datos de los rescatados\ninterface Rescatado {\n  nombre: string;\n  apellido: string;\n  edad: string;\n  sexo: string;\n  procedencia: string;\n  valoracion_medica: string;\n  medico_id: string;\n  rescate_id: string;\n}\n\n@Injectable({\n  providedIn: 'root', // Hace que este servicio esté disponible en toda la aplicación sin necesidad de importarlo en módulos adicionales.\n})\nexport class ServicesService {\n  // Creamos un BehaviorSubject para almacenar y observar la lista de rescatados\n  private rescatadosSource = new BehaviorSubject<Rescatado[]>([]);\n  // Exponemos el BehaviorSubject como un Observable para que los componentes puedan suscribirse\n  rescatados$ = this.rescatadosSource.asObservable();\n\n  constructor() {\n    // Inicializamos el BehaviorSubject con algunos datos de ejemplo\n    this.rescatadosSource.next([\n      { nombre: \"Juan\", apellido: \"Perez\", edad: \"30\", sexo: \"M\", procedencia: \"Madrid\", valoracion_medica: \"Buena\", medico_id: \"1\", rescate_id: \"101\" },\n      { nombre: \"Maria\", apellido: \"Gomez\", edad: \"25\", sexo: \"F\", procedencia: \"Barcelona\", valoracion_medica: \"Regular\", medico_id: \"2\", rescate_id: \"102\" }\n    ]);\n  }\n\n  // Devuelve la lista actual de rescatados\n  getRescatados() {\n    return this.rescatadosSource.getValue();\n  }\n\n  // Agrega un nuevo rescatado a la lista y emite la nueva lista a los suscriptores\n  agregarRescatado(rescatado: Rescatado) {\n    const rescatados = this.getRescatados();\n    this.rescatadosSource.next([...rescatados, rescatado]);\n  }\n\n  // Actualiza un rescatado existente según su índice\n  actualizarRescatado(index: number, rescatado: Rescatado) {\n    const rescatados = this.getRescatados();\n    rescatados[index] = rescatado; // Sobreescribimos el elemento en la posición indicada\n    this.rescatadosSource.next([...rescatados]); // Emitimos la lista actualizada\n  }\n\n  // Elimina un rescatado según su índice y emite la lista actualizada\n  eliminarRescatado(index: number) {\n    const rescatados = this.getRescatados();\n    rescatados.splice(index, 1); // Eliminamos el elemento de la lista\n    this.rescatadosSource.next([...rescatados]); // Emitimos la nueva lista\n  }\n  \n}"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAiBtC,OAAM,MAAOC,eAAe;EAM1BC,YAAA;IALA;IACQ,KAAAC,gBAAgB,GAAG,IAAIH,eAAe,CAAc,EAAE,CAAC;IAC/D;IACA,KAAAI,WAAW,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IAGhD;IACA,IAAI,CAACF,gBAAgB,CAACG,IAAI,CAAC,CACzB;MAAEC,MAAM,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,GAAG;MAAEC,WAAW,EAAE,QAAQ;MAAEC,iBAAiB,EAAE,OAAO;MAAEC,SAAS,EAAE,GAAG;MAAEC,UAAU,EAAE;IAAK,CAAE,EAClJ;MAAEP,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE,OAAO;MAAEC,IAAI,EAAE,IAAI;MAAEC,IAAI,EAAE,GAAG;MAAEC,WAAW,EAAE,WAAW;MAAEC,iBAAiB,EAAE,SAAS;MAAEC,SAAS,EAAE,GAAG;MAAEC,UAAU,EAAE;IAAK,CAAE,CACzJ,CAAC;EACJ;EAEA;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACZ,gBAAgB,CAACa,QAAQ,EAAE;EACzC;EAEA;EACAC,gBAAgBA,CAACC,SAAoB;IACnC,MAAMC,UAAU,GAAG,IAAI,CAACJ,aAAa,EAAE;IACvC,IAAI,CAACZ,gBAAgB,CAACG,IAAI,CAAC,CAAC,GAAGa,UAAU,EAAED,SAAS,CAAC,CAAC;EACxD;EAEA;EACAE,mBAAmBA,CAACC,KAAa,EAAEH,SAAoB;IACrD,MAAMC,UAAU,GAAG,IAAI,CAACJ,aAAa,EAAE;IACvCI,UAAU,CAACE,KAAK,CAAC,GAAGH,SAAS,CAAC,CAAC;IAC/B,IAAI,CAACf,gBAAgB,CAACG,IAAI,CAAC,CAAC,GAAGa,UAAU,CAAC,CAAC,CAAC,CAAC;EAC/C;EAEA;EACAG,iBAAiBA,CAACD,KAAa;IAC7B,MAAMF,UAAU,GAAG,IAAI,CAACJ,aAAa,EAAE;IACvCI,UAAU,CAACI,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,CAAClB,gBAAgB,CAACG,IAAI,CAAC,CAAC,GAAGa,UAAU,CAAC,CAAC,CAAC,CAAC;EAC/C;;;;uBArCWlB,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}